name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
          token: ${{ secrets.GH_TOKEN }}

      - name: Get commit info
        id: commit-info
        run: |
          echo "sha=${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "Using commit SHA: ${{ github.sha }}"

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm format:check

      - name: Test
        run: pnpm test

      - name: Build
        run: pnpm build

      - name: Configure Git User
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Release
        id: semantic-release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "Using GitHub token with prefix: ${GITHUB_TOKEN:0:4}..."
          echo "Using GH_TOKEN with prefix: ${GH_TOKEN:0:4}..."
          echo "Commit SHA: ${{ steps.commit-info.outputs.sha }}"
          echo "Current branch: $(git branch --show-current)"
          echo "Current git status: $(git status)"
          echo "Current version in package.json: $(node -p "require('./package.json').version")"
          echo "Last 3 commits:"
          git log -3 --oneline

          # Run semantic-release with output capture
          OUTPUT=$(npx semantic-release --debug)
          echo "$OUTPUT"

          # Extract the version number and release type from semantic-release output
          if echo "$OUTPUT" | grep -q "The next release version is"; then
            VERSION=$(echo "$OUTPUT" | grep "The next release version is" | sed -E 's/.*The next release version is ([0-9]+\.[0-9]+\.[0-9]+).*/\1/')
            echo "new_version=$VERSION" >> $GITHUB_OUTPUT
            echo "Released version $VERSION"

            # Extract release type directly from semantic-release output
            if echo "$OUTPUT" | grep -q "Release type: major"; then
              RELEASE_TYPE="major"
            elif echo "$OUTPUT" | grep -q "Release type: minor"; then
              RELEASE_TYPE="minor"
            else
              RELEASE_TYPE="patch"
            fi

            echo "release_type=$RELEASE_TYPE" >> $GITHUB_OUTPUT
            echo "Release type: $RELEASE_TYPE"
          else
            echo "No new version was released"
          fi

      - name: Manually Trigger eco-routes Workflow
        if: steps.semantic-release.outputs.new_version
        uses: peter-evans/repository-dispatch@v3.0.0
        with:
          token: ${{ secrets.GH_TOKEN }}
          repository: eco/eco-routes
          event-type: eco-chains-tag-pushed
          client-payload: '{"tag": "v${{ steps.semantic-release.outputs.new_version }}", "release_type": "${{ steps.semantic-release.outputs.release_type }}", "environment": "mainnet", "repository": "${{ github.repository }}", "sha": "${{ steps.commit-info.outputs.sha }}"}'
