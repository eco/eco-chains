name: Release

on:
  workflow_run:
    workflows: ["CI:Build and Test"]
    types:
      - completed
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
          token: ${{ secrets.GH_TOKEN }}

      - name: Get workflow run information
        id: workflow-run
        run: |
          echo "sha=${{ github.event.workflow_run.head_sha }}" >> $GITHUB_OUTPUT
          echo "Using commit SHA: ${{ github.event.workflow_run.head_sha }}"

      - name: Checkout workflow commit
        run: |
          git fetch origin ${{ steps.workflow-run.outputs.sha }}
          git checkout ${{ steps.workflow-run.outputs.sha }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm format:check

      - name: Test
        run: pnpm test

      - name: Build
        run: pnpm build

      - name: Configure Git User
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "Using GitHub token with prefix: ${GITHUB_TOKEN:0:4}..."
          echo "Using GH_TOKEN with prefix: ${GH_TOKEN:0:4}..."
          echo "Workflow SHA: ${{ steps.workflow-run.outputs.sha }}"
          echo "Current branch: $(git branch --show-current)"
          echo "Current git status: $(git status)"
          echo "Current version in package.json: $(node -p "require('./package.json').version")"
          echo "Last 3 commits:"
          git log -3 --oneline
          npx semantic-release --debug
